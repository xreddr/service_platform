PRAGMA foreign_keys = off;

BEGIN TRANSACTION;

DROP TABLE IF EXISTS user;
CREATE TABLE IF NOT EXISTS user (
    id INTEGER NOT NULL,
    username TEXT NOT NULL UNIQUE,
    password TEXT NOT NULL,
    role_id INTEGER NOT NULL,
    PRIMARY KEY(id AUTOINCREMENT),
    FOREIGN KEY(role_id) REFERENCES role(id) ON DELETE CASCADE
);
DROP TABLE IF EXISTS role;
CREATE TABLE IF NOT EXISTS role (
    id INTEGER NOT NULL,
    role TEXT,
    PRIMARY KEY(id AUTOINCREMENT)
);
DROP TABLE IF EXISTS post;
CREATE TABLE IF NOT EXISTS post (
    id INTEGER NOT NULL,
    date DATE NOT NULL,
    body TEXT NOT NULL,
    image TEXT DEFAULT 'none',
    author TEXT NOT NULL,
    service_id TEXT,
    scope TEXT DEFAULT 'global',
    PRIMARY KEY(id AUTOINCREMENT),
    FOREIGN KEY(author) REFERENCES user(id)
);
DROP TABLE IF EXISTS comment;
CREATE TABLE IF NOT EXISTS comment (
    id INTEGER NOT NULL,
    date DATE NOT NULL,
    body TEXT NOT NULL,
    author TEXT NOT NULL,
    post_id INTEGER NOT NULL UNIQUE,
    PRIMARY KEY(id AUTOINCREMENT),
    FOREIGN KEY(post_id) REFERENCES post(id)
);
DROP TABLE IF EXISTS service;
CREATE TABLE IF NOT EXISTS service (
    id INTEGER NOT NULL,
    name TEXT NOT NULL UNIQUE,
    link TEXT,
    PRIMARY KEY(id AUTOINCREMENT)
);
DROP TABLE IF EXISTS user_service;
CREATE TABLE IF NOT EXISTS user_service (
    user_id INTEGER NOT NULL,
    service_id INTEGER NOT NULL,
    PRIMARY KEY(user_id, service_id),
    FOREIGN KEY(user_id) REFERENCES user(id),
    FOREIGN KEY(service_id) REFERENCES service(id)
);

COMMIT TRANSACTION;

PRAGMA foreign_keys = on;
